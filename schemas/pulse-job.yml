$schema: "http://json-schema.org/draft-04/schema#"
title: "Job Definition"
description: |
  Definition of a single job that can be added to Treeherder
  Project is determined by the routing key, so we don't need to specify it here.
id: "jobDefinition"
type: "object"
properties:
  jobGuid:
    title: "jobGuid"
    type: "string"
    pattern: "^[A-Za-z0-9_/+-]+$"
    minLength: 1
    maxLength: 50

  origin:
    anyOf:
      - type: "object"
        properties:
          kind:
            type: "string"
            enum: ['hg.mozilla.org']
          project:
            type: "string"
            pattern: "^[A-Za-z0-9_-]+$"
            minLength: 1
            maxLength: 50
          revision:
            type: "string"
            minLength: 1
            maxLength: 50
          pushLogID:
            type: "integer"
        required: [kind, project, revision]

      - type: "object"
        properties:
          kind:
            type: "string"
            enum: ['github.com']
          project:
            type: "string"
            pattern: "^[A-Za-z0-9_-]+$"
            minLength: 1
            maxLength: 50
          revision:
            type: "string"
            minLength: 1
            maxLength: 50
          pullRequestID:
            type: "integer"
        required: [kind, project, revision]

  display:
    type: "object"
    properties:
      jobSymbol:
        title: "jobSymbol"
        type: "string"
        pattern: "^[A-Za-z0-9_-]+$"
        minLength: 1
        maxLength: 25
      groupSymbol:
        title: "group symbol"
        type: "string"
        pattern: "^[A-Za-z0-9_-]+$"
        minLength: 1
        maxLength: 25
      # could do without these if we require job type and group to exist prior
      jobName:
        title: "job name"
        type: "string"
        minLength: 1
        maxLength: 100
      groupName:
        title: "group name"
        type: "string"
        pattern: "^[A-Za-z0-9_-]+$"
        minLength: 1
        maxLength: 100
    required:
      - jobSymbol
      - groupSymbol


  status:
    title: "status"
    description: |
      coalesced: The job was not run and coalesced to another identical build
      completed: Job ran through to completion
      pending: not yet started
      running: currently in progress
      fail: A failure
      exception: An infrastructure error/exception
      retry: The job was automatically retried by the CI system
      success: Build/Test executed without error or failure
      unknown: Unknown error with job
      usercancel: The job was cancelled by a user
    type: "string"
    enum:
      - unscheduled
      - pending
      - running
      - success
      - fail
      - exception
      - canceled
  jobKind:
    type: "string"
    enum:
      - build
      - test
  tier:
    type: "integer"
    minimum: 1
    maximum: 3

  isRetried:
    description: True indicates this job is has been retried.
    type: "boolean"

  coalesced:
    title: "coalesced"
    type: "array"
    items:
      title: "job guid"
      type: "string"
      pattern: "^[A-Za-z0-9_/+-]+$"
      minLength: 1
      maxLength: 50


  # todo: datetime vs unix timestamp
  # time data
  timeScheduled:
    type: "string"
    format: "date-time"
  timeStarted:
    type: "string"
    format: "date-time"
  timeCompleted:
    type: "string"
    format: "date-time"

  optionCollection:
    title: "option collection"
    description: |
      Options are a dimension of a platform.  The values here can vary wildly,
      so most strings are valid for this.  The list of options that are used
      is maleable going forward.

      Some examples of options that have been used:
        opt    Optimize Compiler GCC optimize flags
        debug  Debug flags passed in
        pgo    Profile Guided Optimization - Like opt, but runs with profiling, then builds again using that profiling
        asan   Address Sanitizer
        tsan   Thread Sanitizer Build
    type: "array"
    items:
      type: "string"
      minLength: 1
      maxLength: 50
      pattern: "^[A-Za-z0-9_-]+$"

  who:
    title: "who"
    format: "email"
    type: "string"
    minLength: 1
    maxLength: 50
  reason:
    description: |
      Examples include:
      - scheduled
      - scheduler
      - Self-serve: Rebuilt by foo@example.com
      - Self-serve: Requested by foo@example.com
      - The Nightly scheduler named 'b2g_mozilla-inbound periodic' triggered this build
      - unknown
    type: "string"
    minLength: 1
    maxLength: 125

  machine:
    build:
      type: "object"
      properties:
        platform:
          type: "string"
          minLength: 1
          maxLength: 25
        osName:
          type: "string"
          minLength: 1
          maxLength: 25
        architecture:
          type: "string"
          minLength: 1
          maxLength: 25
      required:
        - platform
        - os_name
        - architecture
    test:
      type: "object"
      properties:
        machineName:
          type: "string"
          pattern: "^[A-Za-z0-9_-]+$"
          minLength: 1
          maxLength: 50
        platform:
          type: "string"
          minLength: 1
          maxLength: 25
        osName:
          type: "string"
          minLength: 1
          maxLength: 25
        architecture:
          type: "string"
          minLength: 1
          maxLength: 25
      required:
        - platform
        - osName
        - architecture

  artifacts:
    type: "array"
    items:
      type: "object"
      properties:
        type:
          type: "string"
          enum: ["json", "text"]
        name:
          description: |
            The artifact name can be anything.  But when the name ``text_log_summary`` is used
            then treeherder uses that as the summary file for the Log Viewer in the UI.
          type: "string"
          minLength: 1
          maxLength: 50
        blob:
          type: "string"
          minLength: 1
          maxLength: 4096
      required:
        - type
        - name
        - blob

  logs:
    type: "array"
    items:
      type: "object"
      properties:
        url:
          type: "string"
          format: "uri"
          minLength: 1
          maxLength: 255
        name:
          type: "string"
          minLength: 1
          maxLength: 50
      required: [url, name]

additionalProperties: false
required:
  - jobGuid
  - origin
  - display
  - status
  - jobKind
  - reason
  - who
  - machine
