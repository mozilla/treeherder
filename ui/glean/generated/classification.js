/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

// AUTOGENERATED BY glean_parser v14.5.2. DO NOT EDIT. DO NOT COMMIT.

import CounterMetricType from '@mozilla/glean/private/metrics/counter';

/**
 * Counts how often a failure is annotated FBC.
 *
 * Generated from `classification.fixed_by_commit`.
 */
export const fixedByCommit = new CounterMetricType({
  category: 'classification',
  name: 'fixed_by_commit',
  sendInPings: ['classified'],
  lifetime: 'ping',
  disabled: false,
});

/**
 * Counts how often a failure is annotated FBC with a NEW tag.
 *
 * Generated from `classification.fixed_by_commit_new_failure`.
 */
export const fixedByCommitNewFailure = new CounterMetricType({
  category: 'classification',
  name: 'fixed_by_commit_new_failure',
  sendInPings: ['classified'],
  lifetime: 'ping',
  disabled: false,
});

/**
 * Counts how often a bug is filed without a NEW tag.
 *
 * Generated from `classification.new_bug`.
 */
export const newBug = new CounterMetricType({
  category: 'classification',
  name: 'new_bug',
  sendInPings: ['classified'],
  lifetime: 'ping',
  disabled: false,
});

/**
 * Counts how often a bug is filed with a NEW tag.
 *
 * Generated from `classification.new_failure_new_bug`.
 */
export const newFailureNewBug = new CounterMetricType({
  category: 'classification',
  name: 'new_failure_new_bug',
  sendInPings: ['classified'],
  lifetime: 'ping',
  disabled: false,
});

/**
 * Counts how often a NEW tag is classified as fixed_by_commit.
 *
 * Generated from `classification.new_failure_other`.
 */
export const newFailureOther = new CounterMetricType({
  category: 'classification',
  name: 'new_failure_other',
  sendInPings: ['classified'],
  lifetime: 'ping',
  disabled: false,
});
