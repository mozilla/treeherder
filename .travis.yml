dist: bionic
# Use the latest Travis images since they are more up to date than the stable release.
group: edge
jobs:
  include:
    # Run JS tests
    - language: node_js
      # The Node version here must be kept in sync with that in `package.json`.
      node_js: '12.14.1'
      cache: yarn
      before_install:
        # Try to keep version in sync with `package.json`
        - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.22.4
        - export PATH="$HOME/.yarn/bin:$PATH"
      install:
        - yarn install --frozen-lockfile
      script:
        # `yarn build` is tested as part of the Heroku build job
        - yarn lint
        # `yarn lint` only checks the formatting of JS/JSX, this will also check CSS/HTML/JSON/Markdown/YAML.
        - yarn format:check
        - yarn markdownlint
        - yarn test:coverage
        - yarn codecov

    # Run Heroku build & release related code
    - env:
        - NODE_ENV=production YARN_PRODUCTION=true
      language: python
      python: '3.7'
      cache:
        directories:
          - $HOME/.cache/yarn
          - $HOME/.cache/pip
          - node_modules
          - .tox/py37
      install:
        - pip install tox
      script:
        - tox -e heroku

    # Run Python tests & linters outside of the Docker containers
    - language: python
      services:
        - docker
      python: '3.7'
      cache:
        directories:
          - $HOME/.cache/yarn
          - $HOME/.cache/pip
          - node_modules
          - .tox/py37
      install:
        - pip install tox
      script:
        - tox
        - tox -e docs

    # Run Python tests inside of the Docker containers
    - language: shell
      services:
        - docker
      cache:
        directories:
          - $HOME/.cache/pip
          - .tox/py37
      install:
        - pip install tox
        - pip install codecov
      script:
        - tox -e docker
        # It will fail if there's no coverage data
        - codecov --required -f coverage.xml

notifications:
  email:
    on_success: never
    on_failure: always
