[tox]
envlist = py37
isolated_build = true
skipsdist=True

toxworkdir={toxinidir}/.tox

[testenv]
commands_pre = 
    pip install -r {toxinidir}/requirements/dev.txt
    pip install -r {toxinidir}/requirements/common.txt
    pip install -r {toxinidir}/requirements/docs.txt
    {toxinidir}/manage.py check
setenv =
    #Several security features in settings.py (eg setting HSTS headers) are conditional on
    # 'https://' being in the site URL. In addition, we override the test environment's debug
    # value so the tests pass. The real environment variable will be checked during deployment.
    SITE_URL=https://treeherder.dev
    TREEHERDER_DEBUG=False
commands =
    pip check
    {toxinidir}/lints/queuelint.py
    flake8 --show-source
    isort --check-only --diff --quiet
    mkdocs build
    pre-commit run --all-files shellcheck
    pre-commit run --all-files markdownlint
    {toxinidir}/manage.py check --deploy --fail-level WARNING
    # Exercising running tests outside of Docker
    pytest tests/ --ignore=tests/selenium --ignore=tests/extract

[testenv:docker]
whitelist_externals=
    docker-compose
commands_pre = 
    docker-compose build
commands =
    docker-compose run backend bash -c "pytest --cov --cov-report=xml tests/ --runslow --ignore=tests/selenium"

[testenv:selenium]
whitelist_externals =
    yarn
    docker-compose
commands_pre = 
    docker-compose build
    yarn install
commands = 
    yarn build
    # XXX: We have the Gecko driver inside of the Docker instance, thus, needing Selenium tests
    # running inside the Docker container
    docker-compose run backend bash -c "pytest --cov --cov-report=xml tests/selenium/"
