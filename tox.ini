[tox]
envlist = py37
isolated_build = true
skipsdist=True

toxworkdir={toxinidir}/.tox

[testenv]
whitelist_externals =
    sh
    docker-compose
commands_pre =
    docker-compose up --detach mysql redis rabbitmq
    pip install -r {toxinidir}/requirements/dev.txt
    pip install -r {toxinidir}/requirements/common.txt
    pip install -r {toxinidir}/requirements/docs.txt
    {toxinidir}/manage.py check
commands =
    pip check
    {toxinidir}/lints/queuelint.py
    flake8 --show-source
    mkdocs build
    pre-commit run --all-files
    sh -c "SITE_URL=https://treeherder.dev TREEHERDER_DEBUG=False ./manage.py check --deploy --fail-level WARNING"
    # Exercising running tests outside of Docker
    pytest tests/ --ignore=tests/selenium --ignore=tests/extract
commands_post =
    # This is to deal with running the containers with --detached
    docker-compose down

[testenv:docker]
whitelist_externals=
    docker-compose
commands_pre = 
    docker-compose build
commands =
    docker-compose run backend bash -c "pytest --cov --cov-report=xml tests/ --runslow --ignore=tests/selenium"

[testenv:selenium]
whitelist_externals =
    yarn
    docker-compose
commands_pre = 
    docker-compose build
    yarn install
commands = 
    yarn build
    # XXX: We have the Gecko driver inside of the Docker instance, thus, needing Selenium tests
    # running inside the Docker container
    docker-compose run backend bash -c "pytest --cov --cov-report=xml tests/selenium/"

[pytest]
testpaths = tests
norecursedirs = __pycache__ ui
DJANGO_SETTINGS_MODULE=tests.settings
# Enable display of skipped/expected fail test reasons.
# Tell Selenium to use the Firefix driver.
# Disable unused auto-loaded mozlog plugin.
addopts = -rsx --driver Firefox -p no:mozlog
# Make most warnings fatal (including the hidden by default DeprecationWarning):
# https://docs.pytest.org/en/latest/warnings.html
# https://docs.python.org/3.7/library/warnings.html#warning-categories
filterwarnings =
    error
    ignore::ImportWarning
    ignore::PendingDeprecationWarning
    # WhiteNoise warns if either `.django-static/` or `.build/` do not exist at startup,
    # however this is expected when running tests since Django collectstatic and yarn build
    # (which create those directories) typically aren't run apart from during deployments.
    ignore:No directory at.*:UserWarning:whitenoise.base
markers =
    slow: mark a test as slow.
xfail_strict = true
sensitive_url = mozilla\.org

[flake8]
exclude = */.*/,.*/,__pycache__,node_modules
# E129: visually indented line with same indent as next logical line
# E203 whitespace before ':'
# E231: missing whitespace after ','
# E501: line too long
extend_ignore = E129,E203,E231,E501
max-line-length = 100