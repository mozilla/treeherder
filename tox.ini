[tox]
envlist = py37
isolated_build = true
skipsdist=True

toxworkdir={toxinidir}/.tox

[testenv]
commands_pre = 
    pip install -r {toxinidir}/requirements/common.txt
    pip install -r {toxinidir}/requirements/dev.txt 
    pip install -r {toxinidir}/requirements/docs.txt
    apt-get install shellcheck
commands =
    pip check
    {toxinidir}/lints/queuelint.py
    flake8 --show-source
    isort --check-only --diff --quiet
    mkdocs build
    sh -c "git grep -El '^#!/.+\b(bash|sh)\b' | xargs shellcheck"

[testenv:outer]
deps = 
    -r {toxinidir}/requirements/common.txt
    -r {toxinidir}/requirements/dev.txt
    docker-compose
commands_pre = 
    docker-compose up --detach mysql redis rabbitmq
commands = 
    {toxinidir}/runchecks.sh
    {toxinidir}/manage.py check
    SITE_URL=https://treeherder.dev TREEHERDER_DEBUG=False {toxinidir}/manage.py check --deploy --fail-level WARNING
    pytest tests/ --ignore=tests/selenium --ignore=tests/extract
    docker-compose down

[testenv:inner]
deps = 
    codecov
    docker-compose
commands_pre = 
    docker-compose build
commands =
    docker-compose run backend bash -c "pytest --cov --cov-report=xml tests/ --runslow --ignore=tests/selenium"
    codecov -f coverage.xml

[testenv:selenium]
deps = 
    codecov
    docker-compose
whitelist_externals =
    yarn
commands_pre = 
    docker-compose build
    yarn install
commands = 
    yarn build
    docker-compose run backend bash -c "pytest --cov --cov-report=xml tests/selenium/"
    codecov -f coverage.xml
