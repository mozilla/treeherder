/****
 * Data structure sample sent to object store
 ****/
 { 
    /**************
     * The revisions in sources are combined and hashed to form a 
     * result set guid stored in project_jobs_1.result_set.revision_hash.
     * The revision_hash is used for associating job data asynchronously 
     * with a single entry in project_jobs_1.result_set.
     **************/
    sources: [
        {
            repository:"gecko",
            "revision":"",
            "comments":"",
            "push_timestamp":"",
            "commit_timestamp":""
        },
        {
            repository:"gaia",
            "revision":"",
            "comments":"",
            "push_timestamp":"",
            "commit_timestamp":""
        },
        {
            repository:"mozharness",
            "revision":"",
            "comments":"",
            "push_timestamp":"",
            "commit_timestamp":""
        },

        ...

        ],

    revision_hash:"",

    jobs: [
        {
            #Stored in project_jobs_1.job.job_guid
            job_guid:"",

            #Stored in treeherder_reference_1.job_type.name
            name:"build | mochitest_one | ...",

            #Stored in treeherder_reference_1.product
            product_name:"Firefox | Firefox OS | Thunderbird | ...",

            #Stored in project_jobs_1.job.state
            state: "pending | running | completed | coalesced |  ...",

            #Stored in project_jobs_1.job.result
            result: "success | warnings | failure | exception | retry | cancelled",

            #Stored in project_jobs_1.job.reason
            reason: "push | scheduled | self-serve | manual",

            #Stored in project_jobs_1.job.who
            who: " gaia | scheduler name | username ",

            #Stored in project_jobs_1.job.submit_timestamp
            submit_timestamp:"",

            #Stored in project_jobs_1.job.start_timestamp
            start_timestamp:"",

            #Stored in project_jobs_1.job.end_timestamp
            end_timestamp:"",

            #Stored in treeherder_reference_1.machine.name
            machine:"",

            #Stored in:
            # treeherder_reference_1.build_platform.os_name,
            # treeherder_reference_1.build_platform.platform,
            # treeherder_reference_1.build_platform.architecture,
            build_platform:{ os_name:"", platform:"", architecture:"" },

            #Stored in:
            # treeherder_reference_1.machine_platform.os_name,
            # treeherder_reference_1.machine_platform.platform,
            # treeherder_reference_1.machine_platform.architecture,
            machine_platform:{ os_name:"", platform:"", architecture:"" },

            #Stored in treeherder_reference_1.option_collection and
            #treeherder_reference_1.option
            option_collection: {

                #Do we need to store option values somewhere?
                option_name: value, ...

                },

            #Stored in project_jobs_1.job_log_url
            log_references: [
                  { url:"http://ftp.mozilla.org/pub/mozilla.org/firefox/try-builds/mfowler@mozilla.com-64620dd73baa/try-macosx64-debug/try_snowleopard-debug_test-marionette-bm06-tests1-macosx-build1293.txt.gz",
                    #associating a name with the log allows for different types of
                    #processing to be applied to different types of logs
                    name:"unittest" },
                  ...
                  ],

            #Stored project_jobs_1.job_artifact
            artifact:"{
                type:" json | img | ...",
                name:"",
                log_urls:[
                    ]
                blob:""
                }"
            },
        ...
        ],

    /****
     * May not be present if there are no job_guid's coalesced. If present,
     * the job_guids in jobs are where the jobs were coalesced to.
     * The structures main job_guid would be stored in project_jobs_1.job.job_coalesced_to_guid
     * for each entry job_guid in coalesced.
     ****/
    coalesced: [
        "job_guid",
        ...
        ]
}

