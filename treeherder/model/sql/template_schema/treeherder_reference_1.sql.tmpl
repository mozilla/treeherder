/* This file contains {engine} markers that must be replaced
   before it is sent to MySQL.
*/

--
-- Host: localhost    Database: treeherder_reference_1
-- ------------------------------------------------------
-- Server version	5.6.10

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `bugscache`
--

DROP TABLE IF EXISTS `bugscache`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;

/**************************
 * Table: bugscache
 *
 * Holds bugzilla bugs associated with intermittent failures. 
 *
 * Population Method: scheduled job.
 *
 * Example Data:
 *  
 *  status - enum('NEW', 'ASSIGNED', 'REOPENED', 'RESOLVED', 'VERIFIED', 'CLOSED')
 *  resolution - enum('', 'FIXED', 'INVALID', 'WONTFIX', 'LATER', 'REMIND', 'DUPLICATE', 'WORKSFORME')
 *  summary - Summary of bug
 *  crash_signature - Crash signature associated with bug
 *  keywords - Keywords associated with bug
 *  os - Operating system associated with the bug
 *  modified - ?
 **************************/
CREATE TABLE `bugscache` (
  `id` int(10) unsigned NOT NULL,
  `status` varchar(64) COLLATE utf8_bin DEFAULT NULL,
  `resolution` varchar(64) COLLATE utf8_bin DEFAULT NULL,
  `summary` varchar(255) COLLATE utf8_bin NOT NULL,
  `crash_signature` mediumtext COLLATE utf8_bin,
  `keywords` mediumtext COLLATE utf8_bin,
  `os` varchar(64) COLLATE utf8_bin DEFAULT NULL,
  `modified` datetime COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_status` (`status`),
  KEY `idx_resolution` (`resolution`),
  FULLTEXT KEY `idx_summary` (`summary`),
  FULLTEXT KEY `idx_crash_signature` (`crash_signature`),
  FULLTEXT KEY `idx_keywords` (`keywords`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `build_platform`
--

DROP TABLE IF EXISTS `build_platform`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;

/**************************
 * Table: build_platform
 *
 * A list of build platforms associated with project test data.
 *
 * Population Method: dynamic from incoming data. 
 *
 * Example Data:
 *
 *  os_name -  linux | mac | win | Android | Firefox OS | ...
 *  platform - fedora 12 | redhat 12 | 5.1.2600 | 6.1.7600 | OS X 10.7.2 | ...
 *  architecture - x86 | x86_64 etc...
 **************************/
CREATE TABLE `build_platform` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `os_name` varchar(25) COLLATE utf8_bin NOT NULL,
  `platform` varchar(25) COLLATE utf8_bin NOT NULL,
  `architecture` varchar(25) COLLATE utf8_bin DEFAULT NULL,
  `active_status` enum('active','onhold','deleted') COLLATE utf8_bin DEFAULT 'active',
  PRIMARY KEY (`id`),
  KEY `idx_os_name` (`os_name`),
  KEY `idx_platform` (`platform`),
  KEY `idx_architecture` (`architecture`),
  KEY `idx_active_status` (`active_status`)
) ENGINE={engine} DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `failure_classification`
--

DROP TABLE IF EXISTS `failure_classification`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;

/**************************
 * Table: failure_classification
 *
 * A list of failure classification names associated with project test data. 
 *
 * Population Method: manual by admin 
 *
 * Example Data:
 *
 *  name - broken | clobber-needed | infrastructure | intermittent | needs-filing | other | ... 
 **************************/
CREATE TABLE `failure_classification` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) COLLATE utf8_bin NOT NULL,
  `description` text COLLATE utf8_bin NOT NULL,
  `active_status` enum('active','onhold','deleted') COLLATE utf8_bin DEFAULT 'active',
  PRIMARY KEY (`id`),
  KEY `idx_name` (`name`),
  KEY `idx_active_status` (`active_status`)
) ENGINE={engine} DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `job_group`
--

DROP TABLE IF EXISTS `job_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;

/**************************
 * Table: job_group
 *
 * A list of job group descriptions associated with individual jobs.
 *
 * Population Method: manual by an admin
 *
 * Example Data:
 *
 *  symbol - B | M | R | T | ...
 *  name - mochitest | build | reftest | ...
 **************************/
CREATE TABLE `job_group` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `symbol` char(10) COLLATE utf8_bin NOT NULL,
  `name` varchar(50) COLLATE utf8_bin NOT NULL,
  `description` text COLLATE utf8_bin NOT NULL,
  `active_status` enum('active','onhold','deleted') COLLATE utf8_bin DEFAULT 'active',
  PRIMARY KEY (`id`),
  KEY `idx_symbol` (`symbol`),
  KEY `idx_name` (`name`),
  KEY `idx_active_status` (`active_status`)
) ENGINE={engine} DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `job_type`
--

DROP TABLE IF EXISTS `job_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;

/**************************
 * Table: job_type
 *
 * A list of job type information and a mapping of job type to 
 * an associated job_group.
 *
 * Population Method: dynamic from incoming data
 *
 * Example Data:
 *
 *  job_group_id - References job_group.id
 *
 *  symbol - M (1 2 3 4 5 bc oth) | R (C J R) | T (c d o p s tp)
 *           The outer letter represents the symbol for the job_group, the
 *           letters in parenthesis represent the symbols for job_type entries.
 *
 *  name - mochitest-1 | mochitest-2 | tresize | tp5o | ...
 **************************/
CREATE TABLE `job_type` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `job_group_id` int(10) unsigned DEFAULT NULL,
  `symbol` char(10) COLLATE utf8_bin NOT NULL,
  `name` varchar(50) COLLATE utf8_bin NOT NULL,
  `description` text COLLATE utf8_bin NOT NULL,
  `active_status` enum('active','onhold','deleted') COLLATE utf8_bin DEFAULT 'active',
  PRIMARY KEY (`id`),
  KEY `idx_symbol` (`symbol`),
  KEY `idx_name` (`name`),
  KEY `idx_active_status` (`active_status`),
  KEY `fk_job_type_job_group` (`job_group_id`),
  CONSTRAINT `fk_job_type_job_group` FOREIGN KEY (`job_group_id`) REFERENCES `job_group` (`id`)
) ENGINE={engine} DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `machine`
--

DROP TABLE IF EXISTS `machine`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;

/**************************
 * Table: machine
 *
 * A list of machine names associated with project test data.
 *
 * Population Method: dynamic from incoming data
 *
 * Example Data:
 *
 *  name - talos-r3-fed64-038 | talos-r3-leopard-034 | tegra-075.n | ...
 *  first_timestamp - timestamp associated with machine's first data entry
 *  last_timestamp - timestamp associated with machine's last data entry
 **************************/
CREATE TABLE `machine` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) COLLATE utf8_bin NOT NULL,
  `first_timestamp` int(10) unsigned NOT NULL,
  `last_timestamp` int(10) unsigned NOT NULL,
  `active_status` enum('active','onhold','deleted') COLLATE utf8_bin DEFAULT 'active',
  PRIMARY KEY (`id`),
  KEY `idx_name` (`name`),
  KEY `idx_first_timestamp` (`first_timestamp`),
  KEY `idx_last_timestamp` (`last_timestamp`),
  KEY `idx_active_status` (`active_status`)
) ENGINE={engine} DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `machine_note`
--

DROP TABLE IF EXISTS `machine_note`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;

/**************************
 * Table: machine_note
 *
 * A list of notes associated with particular machines. Notes can be set by a sheriff to record 
 * a repeated pattern of failures.
 *
 * Population Method: manual by admin
 *
 * Example Data:
 *
 *  machine_id - References machine.id
 *  author - The author associated with the note
 *  machine_timestamp - timestamp associated with the note
 **************************/
CREATE TABLE `machine_note` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `machine_id` int(10) unsigned NOT NULL,
  `author` varchar(50) COLLATE utf8_bin NOT NULL,
  `machine_timestamp` int(10) unsigned NOT NULL,
  `active_status` enum('active','onhold','deleted') COLLATE utf8_bin DEFAULT 'active',
  `note` text COLLATE utf8_bin,
  PRIMARY KEY (`id`),
  KEY `idx_machine_id` (`machine_id`),
  KEY `idx_author` (`author`),
  KEY `idx_machine_timestamp` (`machine_timestamp`),
  KEY `idx_active_status` (`active_status`),
  CONSTRAINT `fk_machine_note_machine` FOREIGN KEY (`machine_id`) REFERENCES `machine` (`id`)
) ENGINE={engine} DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `machine_platform`
--

DROP TABLE IF EXISTS `machine_platform`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;

/**************************
 * Table: machine_platform
 *
 * A list of machine platforms associated with project test data.
 *
 * Population Method: dynamic from incoming data. 
 *
 * Example Data:
 *
 *  os_name -  linux | mac | win | Android | Firefox OS | ...
 *  platform - fedora 12 | redhat 12 | 5.1.2600 | 6.1.7600 | OS X 10.7.2 | ...
 *  architecture - x86 | x86_64 etc...
 **************************/
CREATE TABLE `machine_platform` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `os_name` varchar(25) COLLATE utf8_bin NOT NULL,
  `platform` varchar(25) COLLATE utf8_bin NOT NULL,
  `architecture` varchar(25) COLLATE utf8_bin DEFAULT NULL,
  `active_status` enum('active','onhold','deleted') COLLATE utf8_bin DEFAULT 'active',
  PRIMARY KEY (`id`),
  KEY `idx_os_name` (`os_name`),
  KEY `idx_platform` (`platform`),
  KEY `idx_architecture` (`architecture`),
  KEY `idx_active_status` (`active_status`)
) ENGINE={engine} DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `option`
--

DROP TABLE IF EXISTS `option`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;

/**************************
 * Table: option
 *
 * A list of option names associated with test data. May or may not
 * be command line options associated with the build or test.
 *
 * Population Method: dynamic from incoming data, manual by admin
 *
 * Example Data:
 *
 *  name - PGO | Non-PGO | ...
 *
 **************************/
CREATE TABLE `option` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) COLLATE utf8_bin NOT NULL,
  `description` text COLLATE utf8_bin NOT NULL,
  `active_status` enum('active','onhold','deleted') COLLATE utf8_bin DEFAULT 'active',
  PRIMARY KEY (`id`),
  KEY `idx_name` (`name`),
  KEY `idx_active_status` (`active_status`)
) ENGINE={engine} DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `option_collection`
--

DROP TABLE IF EXISTS `option_collection`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;

/**************************
 * Table: option_collection
 *
 * Unique collections of options that are applied to test data.
 *
 * Population Method: dynamic from incoming data, manual by admin
 *
 * Example Data:
 *
 *  option_collection_id - Used to group collections of objects
 *  option_id - References option.id
 **************************/
CREATE TABLE `option_collection` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `option_collection_id` int(10) unsigned NOT NULL,
  `option_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `uni_option_collection` (`option_collection_id`,`option_id`),
  KEY `idx_option` (`option_id`),
  KEY `idx_option_collection_id` (`option_collection_id`),
  CONSTRAINT `fk_option` FOREIGN KEY (`option_id`) REFERENCES `option` (`id`)
) ENGINE={engine} DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `product`
--

DROP TABLE IF EXISTS `product`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;

/**************************
 * Table: product
 *
 * A list of unique product names associated with test data.
 *
 * Population Method: dynamic from incoming data, manual by admin
 *
 * Example Data:
 *
 *  name - Firefox | Fennec | Firefox OS | Thunderbird | Seamonkey | ...
 **************************/
CREATE TABLE `product` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) COLLATE utf8_bin NOT NULL,
  `description` text COLLATE utf8_bin NOT NULL,
  `active_status` enum('active','onhold','deleted') COLLATE utf8_bin DEFAULT 'active',
  PRIMARY KEY (`id`),
  KEY `idx_name` (`name`),
  KEY `idx_active_status` (`active_status`)
) ENGINE={engine} DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `repository`
--

DROP TABLE IF EXISTS `repository`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;

/**************************
 * Table: repository
 *
 * A list of repositories reporting pushes and associated test data to treeherder.
 *
 * Population Method: manual by admin
 *
 * Example Data:
 *
 *  repository_group_id - References repository_group.id
 *  name - mozilla-inbound | mozilla-release | gaia-master | gaia-v1-train | ...
 *  type - hg | git | ...
 *  url - https://hg.m.o | https://git.m.o | ...
 *  branch - gecko | gaia | enGB | ...
 *  project_name - ?
 *  purpose - development (aka trunk) | try | release-stablization (train) | ...
 *
 **************************/
CREATE TABLE `repository` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `repository_group_id` int(10) unsigned NOT NULL,
  `name` varchar(50) COLLATE utf8_bin NOT NULL,
  `type` varchar(25) COLLATE utf8_bin NOT NULL,
  `url` varchar(255) COLLATE utf8_bin NOT NULL,
  `branch` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  `project_name` varchar(25) COLLATE utf8_bin DEFAULT NULL,
  `description` text COLLATE utf8_bin NOT NULL,
  `purpose` varchar(50) COLLATE utf8_bin NOT NULL,
  `active_status` enum('active','onhold','deleted') COLLATE utf8_bin DEFAULT 'active',
  PRIMARY KEY (`id`),
  KEY `idx_repository_group_id` (`repository_group_id`),
  KEY `idx_name` (`name`),
  KEY `idx_type` (`type`),
  KEY `idx_branch` (`branch`),
  KEY `idx_project_name` (`project_name`),
  KEY `idx_purpose` (`purpose`),
  KEY `idx_active_status` (`active_status`),
  CONSTRAINT `fk_repository_group` FOREIGN KEY (`repository_group_id`) REFERENCES `repository_group` (`id`)
) ENGINE={engine} DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `repository_group`
--

DROP TABLE IF EXISTS `repository_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;

/**************************
 * Table: repository_group
 *
 * List of repository group names.
 *
 * Population Method: manual by admin
 * 
 * Example Data:
 *
 *  name - train | development | ...
 **************************/
CREATE TABLE `repository_group` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) COLLATE utf8_bin NOT NULL,
  `description` text COLLATE utf8_bin NOT NULL,
  `active_status` enum('active','onhold','deleted') COLLATE utf8_bin DEFAULT 'active',
  PRIMARY KEY (`id`),
  KEY `idx_name` (`name`),
  KEY `idx_active_status` (`active_status`)
) ENGINE={engine} DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `repository_version`
--

DROP TABLE IF EXISTS `repository_version`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;

/**************************
 * Table: repository_version
 *
 * List of versions associated with repositories. Current version will have the
 * most recent timestamp associated with it.
 *
 * Population Method: This information could possibly be pulled automatically. It also
 *                    might be coming in dynamically with test data.
 *
 * Example Data:
 *
 *  repository_id - References repository.id
 *  version - 20.0a1 | 21.0a2 | ...
 **************************/
CREATE TABLE `repository_version` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `repository_id` int(10) unsigned NOT NULL,
  `version` varchar(50) COLLATE utf8_bin NOT NULL,
  `version_timestamp` int(10) unsigned NOT NULL,
  `active_status` enum('active','onhold','deleted') COLLATE utf8_bin DEFAULT 'active',
  PRIMARY KEY (`id`),
  KEY `idx_repository_id` (`repository_id`),
  KEY `idx_version` (`version`),
  KEY `idx_version_timestamp_id` (`version_timestamp`),
  KEY `idx_active_status` (`active_status`),
  CONSTRAINT `fk_repository` FOREIGN KEY (`repository_id`) REFERENCES `repository` (`id`)
) ENGINE={engine} DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2013-02-27  8:55:49
