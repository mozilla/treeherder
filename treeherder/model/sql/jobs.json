{
    "inserts":{
        "create_job_data":{

            "sql":"INSERT INTO `job` (
                `job_guid`,
                `job_coalesced_to_guid`,
                `result_set_id`,
                `build_platform_id`,
                `machine_platform_id`,
                `machine_id`,
                `option_collection_hash`,
                `job_type_id`,
                `product_id`,
                `who`,
                `reason`,
                `result`,
                `state`,
                `submit_timestamp`,
                `start_timestamp`,
                `end_timestamp`)

                SELECT ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?
                FROM DUAL WHERE NOT EXISTS (
                    SELECT `job_guid`
                    FROM `job`
                    WHERE `job_guid` = ?
                )",

            "host":"master_host"
        },
        "set_result_set":{

            "sql":"INSERT INTO `result_set` (`revision_hash`,`push_timestamp`)
                SELECT ?,?
                FROM DUAL
                WHERE NOT EXISTS (
                    SELECT `revision_hash`, `push_timestamp`
                    FROM `result_set`
                    WHERE `revision_hash` = ?
                )",

            "host":"master_host"
        },
        "set_revision":{

            "sql":"INSERT INTO `revision` (
                    `revision`,
                    `author`,
                    `comments`,
                    `files`,
                    `commit_timestamp`,
                    `repository_id`
                    )
                SELECT ?,?,?,?,?,?
                FROM DUAL
                WHERE NOT EXISTS (
                    SELECT `revision`
                    FROM `revision`
                    WHERE `revision` = ? AND `repository_id` = ?
                )",

            "host":"master_host"
        },
        "set_revision_map":{

            "sql":"INSERT INTO `revision_map` (
                `revision_id`,
                `result_set_id`
                )
                SELECT ?,?
                FROM DUAL
                WHERE NOT EXISTS (
                    SELECT `revision_id`, `result_set_id`
                    FROM `revision_map`
                    WHERE `revision_id` = ? AND `result_set_id` = ?
                )",

            "host":"master_host"
        },
        "set_job_log_url":{

            "sql":"INSERT INTO `job_log_url` (
                `job_id`,
                `name`,
                `url`)
            VALUES (?,?,?)",

            "host":"master_host"
        },
        "set_job_artifact":{

            "sql":"INSERT INTO `job_artifact` (
                `job_id`,
                `name`,
                `type`,
                `blob`)
            VALUES (?,?,?,?)",

            "host":"master_host"
        },
        "insert_note":{

            "sql":"INSERT INTO `job_note` (
                `job_id`,
                `failure_classification_id`,
                `who`,
                `note`,
                `note_timestamp`)
            VALUES (?,?,?,?,?)",

            "host":"master_host"
        }

    },

    "updates": {
        "set_state":{

            "sql":"UPDATE `job`
                SET    `state` = ?
                WHERE  `id` = ?
                AND `state` <> 'completed'",

                "host":"master_host"
        },
        "update_job_data":{
            "sql":"UPDATE `job`
                SET
                `job_coalesced_to_guid` = ?,
                `result_set_id` = ?,
                `machine_id` = ?,
                `option_collection_hash` = ?,
                `job_type_id` = ?,
                `product_id` = ?,
                `who` = ?,
                `reason` = ?,
                `result` = ?,
                `state` = ?,
                `start_timestamp` = ?,
                `end_timestamp` = ?
                WHERE  `id` = ?
                AND `state` <> 'completed'",
            "host":"master_host"
        }
    },
    "selects":{
        "get_job":{
            "sql":"SELECT j.*, m.name as machine_name
                   FROM `job` as j
                   LEFT JOIN `REP0`.`machine` as m
                       ON j.`machine_id` = m.id
                   WHERE j.id = ?",

            "host":"read_host"
        },
        "get_job_list":{
            "sql":"SELECT * FROM `job` LIMIT ?,?",

            "host":"read_host"
        },
        "get_log_references":{
            "sql":"SELECT `name`, `url`
                   FROM `job_log_url`
                   WHERE job_id = ?",

            "host":"read_host"
        },
        "get_job_artifact":{
            "sql":"SELECT * from `job_artifact`
                   WHERE `id` = ?",
            "host": "read_host"
        },
        "get_job_artifact_references":{
            "sql":"SELECT `id`, `name`, `type` from `job_artifact`
                   WHERE `job_id` = ?",
            "host": "read_host"
        },
        "get_job_note":{
            "sql":"SELECT * from `job_note`
                   WHERE `id` = ?",
            "host": "read_host"
        },
        "get_job_note_list":{
            "sql":"SELECT * from `job_note`
                   WHERE `job_id` = ?
                   ORDER BY `note_timestamp` DESC
                   ",
            "host": "read_host"
        },
        "get_job_id_by_guid":{
            "sql":"SELECT `id`
                   FROM `job`
                   WHERE `job_guid` = ?",
            "host": "read_host"
        },
        "get_result_set_id":{
            "sql":"SELECT `id` FROM `result_set`
                   WHERE `revision_hash` = ?",
            "host": "read_host"
        },
        "get_revision_id":{
            "sql":"SELECT `id` FROM `revision`
                   WHERE `revision` = ?
                    AND `repository_id` = ?",
            "host": "read_host"
        },
        "get_revision_map_id":{
            "sql":"SELECT `id` FROM `revision_map`
                   WHERE `revision_id` = ?
                    AND `result_set_id` = ?",
            "host": "read_host"
        },
        "get_result_set_list":{
            "sql":"SELECT DISTINCT
                      rs.id,
                      rs.revision_hash,
                      rs.push_timestamp
                   FROM result_set AS rs
                   LEFT JOIN job
                      ON job.result_set_id = rs.id
                   INNER JOIN revision_map
                      ON rs.id = revision_map.result_set_id
                   INNER JOIN revision
                      ON revision_map.revision_id = revision.id
                   WHERE rs.active_status = 'active' 
                   REP0
                   ORDER BY rs.push_timestamp DESC
                   LIMIT ?,?
                   ",
            "host": "read_host"
        },
        "get_result_set_details":{
            "sql":"SELECT 
                    rm.result_set_id,
                    r.repository_id,
                    r.revision,
                    r.author,
                    r.comments,
                    r.commit_timestamp
                   FROM revision_map AS rm
                   LEFT JOIN revision AS r ON rm.revision_id = r.id
                   WHERE r.active_status = 'active' AND rm.result_set_id IN (REP0)
                   ORDER BY r.id DESC",

            "host": "read_host"
        },
        "get_result_set_by_id":{
            "sql":"SELECT
                      `rs`.`id`,
                      `rs`.`revision_hash`,
                      `rs`.`push_timestamp`,
                      `rev`.`revision`,
                      `rev`.`author`,
                      `rev`.`repository_id`,
                      `rev`.`comments`
                   FROM result_set as rs
                   LEFT JOIN revision_map as rm
                       ON rs.id = rm.result_set_id
                   LEFT JOIN revision as rev
                       ON rm.revision_id = rev.id
                   WHERE `rs`.`id` = ?",
            "host": "read_host"
        },
        "get_result_set_job_list":{
            "sql":"SELECT
                    j.`job_guid`,
                    j.`build_platform_id`,
                    j.`option_collection_hash`,
                    mp.`platform` as platform,
                    mp.`os_name` as machine_platform_os,
                    mp.`architecture` as machine_platform_architecture,
                    bp.`platform` as build_platform,
                    bp.`os_name` as build_os,
                    bp.`architecture` as build_architecture,
                    m.`name` as machine_name,
                    jt.`name` as job_type_name,
                    jt.`symbol` as job_type_symbol,
                    jt.`description` as job_type_description,
					jg.`name` as job_group_name,
                    jg.`symbol` as job_group_symbol,
                    jg.`description` as job_group_description,
                    j.`who`,
                    j.`result_set_id`,
                    j.`id` as job_id,
                    j.`result`,
                    j.`state`,
                    j.`reason`,
                    j.`start_timestamp`,
                    j.`end_timestamp`,
                    j.`submit_timestamp`
                  FROM `job` as j
                  LEFT JOIN `REP0`.`machine` as m
                    ON j.`machine_id` = m.id
                  LEFT JOIN `REP0`.`machine_platform` as mp
                    ON j.`machine_platform_id` = mp.id
                  LEFT JOIN `REP0`.`build_platform` as bp
                    ON j.`build_platform_id` = bp.id
                  LEFT JOIN `REP0`.`job_type` as jt
                    ON j.`job_type_id` = jt.id
				  LEFT JOIN `REP0`.`job_group` as jg
                    ON jt.`job_group_id` = jg.id
                  WHERE j.`result_set_id` = ?
                  REP1
                  ",
            "host": "read_host"
        }
    }
}

