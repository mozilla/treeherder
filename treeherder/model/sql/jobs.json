{
    "inserts":{
        "create_job_data":{

            "sql":"INSERT INTO `job` (
                `job_guid`,
                `job_coalesced_to_guid`,
                `result_set_id`,
                `build_platform_id`,
                `machine_platform_id`,
                `machine_id`,
                `option_collection_hash`,
                `job_type_id`,
                `product_id`,
                `who`,
                `reason`,
                `result`,
                `state`,
                `submit_timestamp`,
                `start_timestamp`,
                `end_timestamp`)

                SELECT ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?
                FROM DUAL WHERE NOT EXISTS (
                    SELECT `job_guid`
                    FROM `job`
                    WHERE `job_guid` = ?
                )",

            "host":"master_host"
        },
        "set_result_set":{

            "sql":"INSERT INTO `result_set` (`revision_hash`,`push_timestamp`)
                SELECT ?,?
                FROM DUAL
                WHERE NOT EXISTS (
                    SELECT `revision_hash`, `push_timestamp`
                    FROM `result_set`
                    WHERE `revision_hash` = ?
                )",

            "host":"master_host"
        },
        "set_revision":{

            "sql":"INSERT INTO `revision` (
                    `revision`,
                    `author`,
                    `comments`,
                    `commit_timestamp`,
                    `repository_id`
                    )
                SELECT ?,?,?,?,?
                FROM DUAL
                WHERE NOT EXISTS (
                    SELECT `revision`
                    FROM `revision`
                    WHERE `revision` = ?
                )",

            "host":"master_host"
        },
        "set_revision_map":{

            "sql":"INSERT INTO `revision_map` (
                `revision_id`,
                `result_set_id`
                )
                SELECT ?,?
                FROM DUAL
                WHERE NOT EXISTS (
                    SELECT `revision_id`, `result_set_id`
                    FROM `revision_map`
                    WHERE `revision_id` = ? AND `result_set_id` = ?
                )",

            "host":"master_host"
        },
        "set_job_log_url":{

            "sql":"INSERT INTO `job_log_url` (
                `job_id`,
                `name`,
                `url`)
            VALUES (?,?,?)",

            "host":"master_host"
        },
        "set_job_artifact":{

            "sql":"INSERT INTO `job_artifact` (
                `job_id`,
                `name`,
                `type`,
                `blob`)
            VALUES (?,?,?,?)",

            "host":"master_host"
        }

    },

    "updates": {
        "set_state":{

            "sql":"UPDATE `job`
                SET    `state` = ?
                WHERE  `id` = ?",

                "host":"master_host"
        },
        "update_job_data":{
            "sql":"UPDATE `job`
                SET
                `job_coalesced_to_guid` = ?,
                `result_set_id` = ?,
                `machine_id` = ?,
                `option_collection_hash` = ?,
                `job_type_id` = ?,
                `product_id` = ?,
                `who` = ?,
                `reason` = ?,
                `result` = ?,
                `state` = ?,
                `start_timestamp` = ?,
                `end_timestamp` = ?
                WHERE  `id` = ?",
            "host":"master_host"
        }
    },
    "selects":{
        "get_job":{
            "sql":"SELECT * FROM `job` WHERE id = ?",

            "host":"read_host"
        },
        "get_job_list":{
            "sql":"SELECT * FROM `job` LIMIT ?,?",

            "host":"read_host"
        },
        "get_log_references":{
            "sql":"SELECT `name`, `url`
                   FROM `job_log_url`
                   WHERE job_id = ?",

            "host":"read_host"
        },
        "get_job_id_by_guid":{
            "sql":"SELECT `id`
                   FROM `job`
                   WHERE `job_guid` = ?",
            "host": "read_host"
        },
        "get_result_set_id":{
            "sql":"SELECT `id` FROM `result_set`
                   WHERE `revision_hash` = ?",
            "host": "read_host"
        },
        "get_revision_id":{
            "sql":"SELECT `id` FROM `revision`
                   WHERE `revision` = ?",
            "host": "read_host"
        },
        "get_result_set_list":{
            "sql":"SELECT
                      `rs`.`id`,
                      `rs`.`revision_hash`,
                      `rs`.`push_timestamp`,
                      `rev`.`revision`,
                      `rev`.`author`,
                      `rev`.`repository_id`,
                      `rev`.`comments`
                   FROM result_set as rs
                   LEFT JOIN revision_map as rm
                       ON rs.id = rm.result_set_id
                   LEFT JOIN revision as rev
                       ON rm.revision_id = rev.id
                   LIMIT ?,?",
            "host": "read_host"
        },
        "get_result_set_by_id":{
            "sql":"SELECT
                      `rs`.`id`,
                      `rs`.`revision_hash`,
                      `rs`.`push_timestamp`,
                      `rev`.`revision`,
                      `rev`.`author`,
                      `rev`.`repository_id`,
                      `rev`.`comments`
                   FROM result_set as rs
                   LEFT JOIN revision_map as rm
                       ON rs.id = rm.result_set_id
                   LEFT JOIN revision as rev
                       ON rm.revision_id = rev.id
                   WHERE `rs`.`id` = ?",
            "host": "read_host"
        },
        "get_result_set_job_list":{
            "sql":"SELECT
                    j.`job_guid`,
                    j.`build_platform_id`,
                    mp.`platform`,
                    m.`name`,
                    jt.`name`,
                    jt.`symbol`,
                    jt.`description`,
                    j.`who`,
                    j.`result_set_id`,
                    j.`result`,
                    j.`state`
                  FROM `job` as j
                  LEFT JOIN `treeherder`.`machine` as m
                    ON j.`machine_id` = m.id
                  LEFT JOIN `treeherder`.`machine_platform` as mp
                    ON j.`machine_platform_id` = mp.id
                  LEFT JOIN `treeherder`.`build_platform` as bp
                    ON j.`build_platform_id` = bp.id
                  LEFT JOIN `treeherder`.`job_type` as jt
                    ON j.`job_type_id` = jt.id
                  WHERE `result_set_id` = ?",
            "host": "read_host"
        }
    }
}

