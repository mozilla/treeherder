{
    "inserts":{
        "create_reference_data_signature":{
            "sql": "INSERT INTO `reference_data_signatures` (
                        `name`, `signature`, `build_system_type`, `repository`, `build_os_name`,
                        `build_platform`, `build_architecture`, `machine_os_name`,
                        `machine_platform`, `machine_architecture`,
                        `job_group_name`, `job_group_symbol`, `job_type_name`, `job_type_symbol`,
                        `option_collection_hash`, `first_submission_timestamp`)
                    SELECT ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?
                    FROM DUAL
                    WHERE NOT EXISTS (
                    SELECT `name`, `signature`, `build_system_type`, `repository`
                    FROM `reference_data_signatures`
                    WHERE `name` = ? AND `signature` = ? AND `build_system_type` = ? AND `repository` = ?
                    )",
            "host_type":"master_host"
        },
        "create_build_platform":{
            "sql": "INSERT INTO `build_platform` (`os_name`, `platform`, `architecture`)
                    SELECT ?, ?, ?
                    FROM DUAL
                    WHERE NOT EXISTS (
                    SELECT `os_name`, `platform`, `architecture`
                    FROM `build_platform`
                    WHERE `os_name` = ? AND `platform` = ? AND `architecture` = ?
                    )",
            "host_type":"master_host"
        },

        "create_job_group":{
            "sql":"INSERT INTO `job_group` (`name`, `symbol`, `description`)
                   SELECT ?, ?, 'fill me'
                    FROM DUAL
                    WHERE NOT EXISTS (
                    SELECT `name`
                    FROM `job_group`
                    WHERE `name` = ? AND `symbol` = ?
                    )",
            "host_type":"master_host"
        },

        "create_job_type":{
            "sql":"INSERT INTO `job_type` (`name`, `symbol`, `description`)
                   SELECT ?, ?, 'fill me'
                    FROM DUAL
                    WHERE NOT EXISTS (
                    SELECT `name`
                    FROM `job_type`
                    WHERE `name` = ? AND `symbol` = ?
                    )",
            "host_type":"master_host"
        },

        "create_machine" : {
            "sql": "INSERT INTO `machine` (`name`, `first_timestamp`, `last_timestamp`)
                    SELECT ?, ?, ?
                    FROM DUAL
                    WHERE NOT EXISTS (
                    SELECT `name`
                    FROM `machine`
                    WHERE `name` = ?
                    )",
            "host_type":"master_host"
        },

        "create_machine_platform":{
            "sql": "INSERT INTO `machine_platform` (`os_name`, `platform`, `architecture`)
                    SELECT ?, ?, ?
                    FROM DUAL
                    WHERE NOT EXISTS (
                    SELECT `os_name`, `platform`, `architecture`
                    FROM `machine_platform`
                    WHERE `os_name` = ? AND `platform` = ? AND `architecture` = ?
                    )",
            "host_type":"master_host"
        },

        "create_option":{
            "sql":"INSERT INTO `option` (`name`, `description`)
                   SELECT ?, 'fill me'
                    FROM DUAL
                    WHERE NOT EXISTS (
                    SELECT `name`
                    FROM `option`
                    WHERE `name` = ?
                    )",
            "host_type":"master_host"
        },

        "create_option_collection":{
            "sql": "INSERT INTO `option_collection` (`option_collection_hash`, `option_id`)
                    SELECT ?, ?
                    FROM DUAL
                    WHERE NOT EXISTS(
                    SELECT `option_collection_hash`, `option_id`
                    FROM `option_collection`
                    WHERE `option_collection_hash` = ? AND `option_id` = ?
                    )",
            "host_type":"master_host"
        },

        "create_product":{
            "sql": "INSERT INTO `product` (`name`, `description`)
                    SELECT ?, 'fill me'
                    FROM DUAL
                    WHERE NOT EXISTS (
                    SELECT `name`
                    FROM `product`
                    WHERE `name` = ?
                    )",
            "host_type":"master_host"
        },

        "create_bugscache":{
            "sql":"INSERT INTO `bugscache` (`id`, `status`, `resolution`, `summary`, `crash_signature`, `keywords`, `os`, `modified`)
                   SELECT ?, ?, ?, ?, ?, ?, ?, ?
                    FROM DUAL
                    WHERE NOT EXISTS (
                    SELECT `id`
                    FROM `bugscache`
                    WHERE `id` = ?
                    )",
            "host_type":"master_host"
        }

    },
    "selects":{
        "get_reference_data_signature_names":{
            "sql":"SELECT `name`, `signature` FROM `reference_data_signatures` WHERE `signature` IN (REP0)",

            "host_type":"read_host"
        },
        "get_reference_data":{
            "sql":"SELECT `signature`,
                          `build_os_name`,
                          `build_platform`,
                          `build_architecture`,
                          `machine_os_name`,
                          `machine_platform`,
                          `machine_architecture`,
                          `job_group_name`,
                          `job_group_symbol`,
                          `job_type_name`,
                          `job_type_symbol`,
                          `option_collection_hash`,
                          `build_system_type`,
                          `repository`
                    FROM reference_data_signatures WHERE signature IN (REP0)",

            "host_type": "read_host"
        },
        "get_build_platforms":{
            "sql": "SELECT `id`, `os_name`, `platform`, `architecture`
                    FROM `build_platform`
                    WHERE `active_status` = 'active' AND (REP0)",
            "host_type":"master_host"
        },
        "get_job_groups":{
            "sql": "SELECT `id`, `name`, `symbol`
                    FROM `job_group`
                    WHERE `active_status` = 'active' AND (REP0)",

            "host_type":"master_host"
        },
        "get_job_types":{
            "sql": "SELECT `id`, `name`, `symbol`
                    FROM `job_type`
                    WHERE `active_status` = 'active' AND (REP0)",

            "host_type":"master_host"
        },
        "get_machines":{
            "sql": "SELECT `id`, `name`
                    FROM `machine`
                    WHERE `active_status` = 'active' AND `name` IN (REP0)",

            "host_type":"read_host"
        },
        "get_machine_platforms":{
            "sql": "SELECT `id`, `os_name`, `platform`, `architecture`
                    FROM `machine_platform`
                    WHERE `active_status` = 'active' AND (REP0)",
            "host_type":"master_host"
        },
        "get_options":{
            "sql": "SELECT `id`, `name`
                    FROM `option`
                    WHERE `active_status` = 'active' AND `name` IN (REP0)",

            "host_type":"read_host"
        },
        "get_products":{
            "sql": "SELECT `id`, `name`
                    FROM `product`
                    WHERE `active_status` = 'active' AND `name` IN (REP0)",

            "host_type":"read_host"
        },
        "get_repository_id":{
            "sql": "SELECT `id`
                    FROM `repository`
                    WHERE `name` = ?",
            "host_type":"read_host"
        },
        "get_repository_info":{
            "sql": "SELECT *
                    FROM `repository`
                    WHERE `id` = ?  AND `active_status` = 'active'",
            "host_type":"read_host"
        },
        "get_all_repository_info":{
            "sql": "SELECT *
                    FROM `repository`
                    WHERE
                        `active_status` = 'active'",
            "host_type":"read_host"
        },
        "get_all_option_collections":{
            "sql":"SELECT option_collection_hash,
                        GROUP_CONCAT( name SEPARATOR ' ' ) as opt
                   FROM `option_collection` oc
                   INNER JOIN `option` o
                        ON o.id = oc.option_id
                   WHERE o.active_status = 'active'
                   GROUP BY oc.option_collection_hash",
            "host_type":"read_host"
        },
        "get_all_repository_info":{
            "sql": "SELECT *
                    FROM `repository`
                    WHERE
                        `active_status` = 'active'",
            "host_type":"read_host"
        },
        "get_open_recent_bugs": {
            "sql": "SELECT id, summary, crash_signature, keywords, os, resolution,
                    MATCH (`summary`)
                        AGAINST (? IN BOOLEAN MODE) AS relevance
                    FROM bugscache
                    WHERE 1
                        AND resolution = ''
                        AND `summary` LIKE CONCAT ('%%', ?, '%%') ESCAPE '='
                        AND modified >= ?
                    ORDER BY relevance DESC
                    LIMIT 0,?",
            "host_type": "read_host"

        },
        "get_all_others_bugs": {
            "sql": "SELECT id, summary, crash_signature, keywords, os, resolution,
                    MATCH (`summary`)
                        AGAINST (? IN BOOLEAN MODE) AS relevance
                    FROM bugscache
                    WHERE 1
                        AND `summary` LIKE CONCAT ('%%', ?, '%%') ESCAPE '='
                        AND (modified < ? OR resolution <> '')
                    ORDER BY relevance DESC
                    LIMIT 0,?",
            "host_type": "read_host"

        },
        "get_all_bug_numbers": {
            "sql": "SELECT id from bugscache",
            "host_type": "read_host"
        }
    },
    "updates":{
        "update_machine_timestamp":{
            "sql": "UPDATE `machine`
                    SET `last_timestamp` = ?
                    WHERE `name` = ?",
            "host_type":"master_host"
        },
        "update_bugscache":{
            "sql": "UPDATE `bugscache`
                    SET `id` = ?,
                        `status` = ?,
                        `resolution` = ?,
                        `summary` = ?,
                        `crash_signature` = ?,
                        `keywords` = ?,
                        `os` = ?,
                        `modified` = ?
                    WHERE `id` = ?",
            "host_type":"master_host"
        }
    },
    "deletes": {
        "delete_bugs": {
            "sql": "DELETE FROM bugscache WHERE id in (REP0)",
            "host_type": "master_host"
        }
    }
}
